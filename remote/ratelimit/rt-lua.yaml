apiVersion: v1
kind: ConfigMap
metadata:
  name: rate-limit-script
data:
  main.lua: |
    local http = require "resty.http"
    local cjson = require "cjson"

    local function check_rate_limit()
        local httpc = http.new()
        httpc:set_timeout(5000)
        local rate_limit_service_url = "http://throttler.default.svc.cluster.local:8080/ratelimit"
        local auth_header = ngx.req.get_headers()["Authorization"]

        local res, err = httpc:request_uri(rate_limit_service_url, {
            method = "GET",
            headers = {
                ["Content-Type"] = "application/json",
                ["Authorization"] = auth_header,
            }
        })

        if not res then
            ngx.log(ngx.ERR, "failed to request rate limit service: ", err)
            return ngx.HTTP_INTERNAL_SERVER_ERROR
        end

        if res.status == 200 then
            return ngx.OK
        else
            local error_response = cjson.encode({
                error = "too many requests",
                message = "try again later"
            })

            ngx.status = res.status
            ngx.header.content_type = "application/json"
            ngx.say(error_response)
            ngx.exit(ngx.status)
        end
    end

    check_rate_limit()

